@namespace Blazorise
@inherits BaseComponent
@using Blazorise.Extensions

<CascadingValue Value="@this" IsFixed>
    @if (!modalInstances.IsNullOrEmpty())
    {
        @foreach (var modal in modalInstances)
        {
            <Modal @ref="modal.ModalRef" @bind-Visible="modal.Visible" Attributes="modal.Attributes" Animated="modal.GetAnimated()" AnimationDuration="modal.GetAnimationDuration()" Background="modal.Background" Border="modal.Border" Casing="modal.Casing" Class="modal.Class"
               Closed="OnModalClosed" Closing="modal.GetClosing()" Clearfix="modal.Clearfix" ElementId="modal.ElementId" Display="modal.Display" Flex="Flex" Float="modal.Float" FocusTrap="modal.GetFocusTrap()" Height="modal.Height" Margin="modal.Margin"
               Opened="modal.GetOpened()" Opening="modal.GetOpening()" Overflow="modal.Overflow" Padding="modal.Padding" Position="modal.Position" RenderMode="modal.GetRenderMode()" ScrollToTop="modal.GetScrollToTop()" Shadow="modal.Shadow"
               ShowBackdrop="modal.GetShowBackdrop()" Style="modal.Style" TextAlignment="modal.TextAlignment" TextColor="modal.TextColor" TextOverflow="modal.TextOverflow" TextTransform="modal.TextTransform" TextWeight="modal.TextWeight"
               VerticalAlignment="modal.VerticalAlignment" Width="modal.Width">
                <ModalContent>
                    @if (modal.GetUseModalStructure())
                    {
                        <ModalHeader>
                            @if (!string.IsNullOrWhiteSpace(modal.Title))
                            {
                                <ModalTitle>
                                    @modal.Title
                                </ModalTitle>
                            }
                            <CloseButton />
                        </ModalHeader>
                        <ModalBody>
                            @modal.ChildContent
                        </ModalBody>
                    }
                    else
                    {
                        @modal.ChildContent
                    }
                </ModalContent>
            </Modal>
        }
    }
</CascadingValue>