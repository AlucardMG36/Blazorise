window.blazorise.timePicker={_pickers:[],initialize:(n,t,i)=>{function r(n){n.forEach(n=>{if(n.attributeName==="class"){const t=window.blazorise.timePicker._pickers[n.target.id];if(t&&t.altInput){const n=[...t.altInput.classList].filter(n=>!["input","active"].includes(n)),i=[...t.input.classList].filter(n=>!["flatpickr-input"].includes(n));n.forEach(n=>{t.altInput.classList.remove(n)});i.forEach(n=>{t.altInput.classList.add(n)})}}})}const u=new MutationObserver(r);u.observe(document.getElementById(t),{attributes:!0});const f=flatpickr(n,{enableTime:!0,noCalendar:!0,dateFormat:"H:i",allowInput:!0,altInput:!0,altFormat:i.displayFormat?i.displayFormat:"H:i",defaultValue:i.default,minTime:i.min,maxTime:i.max,time_24hr:i.timeAs24hr?i.timeAs24hr:!1});window.blazorise.timePicker._pickers[t]=f},destroy:(n,t)=>{const i=window.blazorise.timePicker._pickers||{};delete i[t]},updateValue:(n,t,i)=>{const r=window.blazorise.timePicker._pickers[t];r&&r.setDate(i)},updateOptions:(n,t,i)=>{const r=window.blazorise.timePicker._pickers[t];r&&(i.displayFormat.changed&&r.set("altFormat",i.displayFormat.value),i.timeAs24hr.changed&&r.set("time_24hr",i.timeAs24hr.value),i.min.changed&&r.set("minTime",i.min.value),i.max.changed&&r.set("maxTime",i.max.value))},open:(n,t)=>{const i=window.blazorise.timePicker._pickers[t];i&&i.open()},close:(n,t)=>{const i=window.blazorise.timePicker._pickers[t];i&&i.close()},toggle:(n,t)=>{const i=window.blazorise.timePicker._pickers[t];i&&i.toggle()}};